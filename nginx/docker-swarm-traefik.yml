version: "3.8" # https://docs.docker.com/compose/compose-file/compose-file-v3/
services:
  nginx:
    image: nginx:alpine
    # https://hub.docker.com/_/nginx
    volumes:
      - snipeit_public:/var/www/snipeit/public
    networks:
      - web
      - traefik
    configs:
      - source: snipeit_nginx.conf
        target: /etc/nginx/templates/nginx.conf.template
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
      # https://nginx.org/en/docs/ngx_core_module.html#worker_processes
      - NGINX_WORKER_PROCESSES=auto
      # https://nginx.org/en/docs/ngx_core_module.html#worker_rlimit_nofile
      - NGINX_WORKER_RLIMIT_NOFILE=65535
      # https://nginx.org/en/docs/ngx_core_module.html#worker_connections
      - NGINX_WORKER_CONNECTIONS=65535
      # https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
      - NGINX_CLIENT_MAX_BODY_SIZE=0
      # https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_timeout
      - NGINX_CLIENT_BODY_TIMEOUT=6666s
      - NGINX_HOST=snipeit.yourdomain.test
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.snipeit.entrypoints=websecure"
        - "traefik.http.routers.snipeit.rule=Host(`snipeit.yourdomain.test`)"
        - "traefik.http.services.snipeit.loadbalancer.server.port=80" # Port traefik needs to route traffic to

  snipeit:
    image: zeigren/snipe-it:latest # ghcr.io/zeigren/snipe-it-docker:latest
    # https://hub.docker.com/r/zeigren/snipe-it
    volumes: # https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes
      - snipeit:/var/www/snipeit/storage
      - snipeit_public:/var/www/snipeit/public
    secrets: # https://docs.docker.com/compose/compose-file/compose-file-v3/#secrets
      - snipeit_sql_password
      - snipeit_app_key
    networks: # https://docs.docker.com/compose/compose-file/compose-file-v3/#networks
      - web
      - db
      - redis
    environment: # https://docs.docker.com/compose/compose-file/compose-file-v3/#environment
      - DB_PASSWORD=DOCKER-SECRET->snipeit_sql_password
      - APP_URL=https://snipeit.yourdomain.test
      - COOKIE_DOMAIN=snipeit.yourdomain.test
      # Run first without APP_KEY to have the container create one
      # - APP_KEY=DOCKER-SECRET->snipeit_app_key

  mariadb:
    image: mariadb:latest
    # https://hub.docker.com/_/mariadb
    volumes:
      - snipeit_db:/var/lib/mysql
    secrets:
      - snipeit_sql_password
    networks:
      - db
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/snipeit_sql_password
      - MYSQL_PASSWORD_FILE=/run/secrets/snipeit_sql_password
      - MYSQL_USER=snipeit
      - MYSQL_DATABASE=snipeit

  redis:
    image: redis:alpine
    # https://hub.docker.com/_/redis
    networks:
      - redis

volumes: # https://docs.docker.com/compose/compose-file/compose-file-v3/#volume-configuration-reference
  snipeit:
  snipeit_db:
  snipeit_public:

configs: # https://docs.docker.com/compose/compose-file/compose-file-v3/#configs-configuration-reference
  snipeit_nginx.conf:
    external: true

secrets: # https://docs.docker.com/compose/compose-file/compose-file-v3/#secrets-configuration-reference
  snipeit_sql_password:
    external: true
  snipeit_app_key:
    external: true

networks: # https://docs.docker.com/compose/compose-file/compose-file-v3/#network-configuration-reference
  web:
  db:
  redis:
  traefik:
    external: true
